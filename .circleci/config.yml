version: 2.1
executors:
  circleci-openjdk-8-executor:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      _JAVA_OPTIONS: -Xmx512m
      GRADLE_OPTS: -Dkotlin.compiler.execution.strategy="in-process"
      TERM: dumb
  circleci-openjdk-11-executor:
    docker:
      - image: circleci/openjdk:11.0.5-jdk-stretch
    working_directory: ~/repo
    environment:
      _JAVA_OPTIONS: -Xmx512m
      GRADLE_OPTS: -Dkotlin.compiler.execution.strategy="in-process"
      TERM: dumb
commands:
  pre-build:
    steps:
      - checkout
      - run: sudo apt-get update && sudo apt-get install -y graphviz fonts-ipafont
      - restore_cache:
          key: gradle-dependencies-{{ checksum "build.gradle" }}
  post-build:
    steps:
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-dependencies-{{ checksum "build.gradle" }}
      - store_test_results:
          path: jig-core/build/test-results
      - store_artifacts:
          path: jig-core/build/reports/tests
      - store_artifacts:
          path: jig-gradle-plugin/build/reports/tests
  build:
    steps:
      - pre-build
      - run: ./gradlew --debug build
      - post-build
  release:
    steps:
      - store_artifacts:
          path: jig-cli/build/libs
          destination: module
      - store_artifacts:
          path: jig-cli-kt/build/libs
          destination: module
      - store_artifacts:
          path: jig-cli-scala/build/libs
          destination: module
      - run: |
         java -jar jig-cli/build/libs/jig-cli.jar --outputDirectory=example
      - store_artifacts:
          path: example
          destination: example
      - run: ./gradlew :jig-core:bintrayUpload :jig-gradle-plugin:publishPlugins -Pversion=${CIRCLE_TAG}

      # licenses
      - run: ./gradlew downloadLicenses
      - store_artifacts:
          path: build/reports/license
  build-release:
    steps:
      - pre-build
      - run: ./gradlew build -Pversion=${CIRCLE_TAG}
      - post-build
      - release

jobs:
  build-java-8:
    executor: circleci-openjdk-8-executor
    steps:
      - build
  build-java-11:
    executor: circleci-openjdk-11-executor
    steps:
      - build
  release-build:
    executor: circleci-openjdk-8-executor
    steps:
      - build-release

workflows:
  version: 2
  usually:
    jobs:
      - build-java-8:
          filters:
            branches:
              only: 'master'
      - build-java-11:
          requires:
            - build-java-8
  release:
    jobs:
      - release-build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.+/

